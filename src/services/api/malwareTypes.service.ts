import axiosInstance from './axiosInstance';

// Kiểu dữ liệu khớp với API thực tế
export interface MalwareType {
  id: string;
  malware_type_name: string;
  description?: string;
  id_peripheral_devices?: string | null;
  peripheral_device_name?: string | null;
  created_at?: string;
  created_by_name?: string | null;
  updated_by_name?: string | null;
}

export interface MalwareTypesListResult {
  rows: MalwareType[];
  count: number;
}

// DTO tạo/cập nhật theo API
export interface CreateMalwareTypeDto {
  malware_type_name: string;
  description?: string;
  id_peripheral_devices?: string | null;
}

export interface UpdateMalwareTypeDto {
  malware_type_name?: string;
  description?: string;
  id_peripheral_devices?: string | null;
}

class MalwareTypesService {
  // Lấy danh sách malware types với pagination
  async getAll(page: number = 1, size: number = 20, params: any = {}): Promise<MalwareTypesListResult> {
    const response = await axiosInstance.get('/malware-types', {
      params: {
        pageSize: size,
        pageIndex: page,
        ...params
      }
    });
    const data = response.data?.data ?? {};
    return {
      rows: data.rows ?? [],
      count: data.count ?? 0
    };
  }

  // Lấy danh sách đơn giản (không phân trang)
  async getAllSimple(): Promise<MalwareType[]> {
    const response = await axiosInstance.get('/malware-types', {
      params: {
        pageSize: 1000,
        pageIndex: 1
      }
    });
    return response.data?.data?.rows ?? [];
  }

  // Lấy thông tin chi tiết theo ID
  async getById(id: string): Promise<MalwareType> {
    const response = await axiosInstance.get(`/malware-types/${id}`);
    return response.data?.data;
  }

  // Tạo mới
  async create(payload: CreateMalwareTypeDto): Promise<MalwareType> {
    const response = await axiosInstance.post('/malware-types', payload);
    return response.data?.data;
  }

  // Cập nhật
  async update(id: string, payload: UpdateMalwareTypeDto): Promise<MalwareType> {
    const response = await axiosInstance.put(`/malware-types/${id}`, payload);
    return response.data?.data;
  }

  // Xóa
  async delete(id: string): Promise<void> {
    await axiosInstance.delete(`/malware-types/${id}`);
  }
}

export default new MalwareTypesService();
