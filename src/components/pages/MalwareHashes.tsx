import { Badge } from '../ui/badge';
import { DataTable } from '../common/DataTable';
import { Label } from '../ui/label';
import { Input } from '../ui/input';
import { Textarea } from '../ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';

const mockMalwareHashes = [
  { 
    id: 1, 
    hash: 'e3b0c44298fc1c149afbf4c8996fb924', 
    type: 'MD5', 
    malwareType: 'Trojan', 
    severity: 'high', 
    detected: '2024-01-15', 
    source: 'Virus Total',
    description: 'Banking trojan targeting financial data'
  },
  { 
    id: 2, 
    hash: 'cf83e1357eefb8bdf1542850d66d8007', 
    type: 'SHA1', 
    malwareType: 'Ransomware', 
    severity: 'critical', 
    detected: '2024-01-14', 
    source: 'Internal Scan',
    description: 'File encryption ransomware'
  },
  { 
    id: 3, 
    hash: 'e3348bc8e5d1c0d0de9e5e5f5d5c0d0d', 
    type: 'SHA256', 
    malwareType: 'Spyware', 
    severity: 'medium', 
    detected: '2024-01-13', 
    source: 'YARA Rules',
    description: 'Keylogger and data exfiltration'
  },
  { 
    id: 4, 
    hash: 'a1b2c3d4e5f6789012345678901234567', 
    type: 'MD5', 
    malwareType: 'Backdoor', 
    severity: 'high', 
    detected: '2024-01-12', 
    source: 'Honeypot',
    description: 'Remote access backdoor'
  },
  { 
    id: 5, 
    hash: 'f1e2d3c4b5a69870123456789abcdef0', 
    type: 'SHA256', 
    malwareType: 'Worm', 
    severity: 'medium', 
    detected: '2024-01-11', 
    source: 'Network Monitoring',
    description: 'Self-replicating network worm'
  }
];

const getSeverityColor = (severity: string) => {
  switch (severity) {
    case 'critical': return 'bg-red-500/10 text-red-500 border-red-500/20';
    case 'high': return 'bg-orange-500/10 text-orange-500 border-orange-500/20';
    case 'medium': return 'bg-yellow-500/10 text-yellow-500 border-yellow-500/20';
    case 'low': return 'bg-blue-500/10 text-blue-500 border-blue-500/20';
    default: return 'bg-gray-500/10 text-gray-500 border-gray-500/20';
  }
};

const getSeverityText = (severity: string) => {
  switch (severity) {
    case 'critical': return 'Nghiêm trọng';
    case 'high': return 'Cao';
    case 'medium': return 'Trung bình';
    case 'low': return 'Thấp';
    default: return 'Không xác định';
  }
};

const getHashTypeColor = (type: string) => {
  switch (type) {
    case 'MD5': return 'bg-blue-500/10 text-blue-500 border-blue-500/20';
    case 'SHA1': return 'bg-green-500/10 text-green-500 border-green-500/20';
    case 'SHA256': return 'bg-purple-500/10 text-purple-500 border-purple-500/20';
    default: return 'bg-gray-500/10 text-gray-500 border-gray-500/20';
  }
};

const columns = [
  {
    key: 'hash',
    title: 'Hash',
    render: (value: string) => (
      <code className="px-2 py-1 bg-muted rounded text-sm">
        {value.substring(0, 16)}...
      </code>
    ),
    filterable: true,
    filterType: 'text' as const
  },
  {
    key: 'type',
    title: 'Loại Hash',
    render: (value: string) => (
      <Badge variant="outline" className={getHashTypeColor(value)}>
        {value}
      </Badge>
    ),
    filterable: true,
    filterType: 'select' as const,
    filterOptions: [
      { value: 'MD5', label: 'MD5' },
      { value: 'SHA1', label: 'SHA1' },
      { value: 'SHA256', label: 'SHA256' }
    ]
  },
  {
    key: 'malwareType',
    title: 'Loại mã độc',
    filterable: true,
    filterType: 'select' as const,
    filterOptions: [
      { value: 'Trojan', label: 'Trojan' },
      { value: 'Ransomware', label: 'Ransomware' },
      { value: 'Spyware', label: 'Spyware' },
      { value: 'Backdoor', label: 'Backdoor' },
      { value: 'Worm', label: 'Worm' }
    ]
  },
  {
    key: 'severity',
    title: 'Mức độ nguy hiểm',
    render: (value: string) => (
      <Badge variant="outline" className={getSeverityColor(value)}>
        {getSeverityText(value)}
      </Badge>
    ),
    filterable: true,
    filterType: 'select' as const,
    filterOptions: [
      { value: 'critical', label: 'Nghiêm trọng' },
      { value: 'high', label: 'Cao' },
      { value: 'medium', label: 'Trung bình' },
      { value: 'low', label: 'Thấp' }
    ]
  },
  {
    key: 'detected',
    title: 'Ngày phát hiện',
    filterable: true,
    filterType: 'date' as const
  },
  {
    key: 'source',
    title: 'Nguồn',
    filterable: true,
    filterType: 'text' as const
  },
  {
    key: 'description',
    title: 'Mô tả'
  }
];

const renderForm = () => (
  <div className="space-y-4 py-4">
    <div className="space-y-2">
      <Label htmlFor="malware-hash">
        Hash
      </Label>
      <Input id="malware-hash" placeholder="Nhập mã hash" />
    </div>
    <div className="space-y-2">
      <Label htmlFor="hash-type">
        Loại Hash
      </Label>
      <Select>
        <SelectTrigger>
          <SelectValue placeholder="Chọn loại hash" />
        </SelectTrigger>
        <SelectContent>
          <SelectItem value="md5">MD5</SelectItem>
          <SelectItem value="sha1">SHA1</SelectItem>
          <SelectItem value="sha256">SHA256</SelectItem>
        </SelectContent>
      </Select>
    </div>
    <div className="space-y-2">
      <Label htmlFor="malware-type">
        Loại mã độc
      </Label>
      <Select>
        <SelectTrigger>
          <SelectValue placeholder="Chọn loại mã độc" />
        </SelectTrigger>
        <SelectContent>
          <SelectItem value="trojan">Trojan</SelectItem>
          <SelectItem value="ransomware">Ransomware</SelectItem>
          <SelectItem value="spyware">Spyware</SelectItem>
          <SelectItem value="backdoor">Backdoor</SelectItem>
          <SelectItem value="worm">Worm</SelectItem>
          <SelectItem value="virus">Virus</SelectItem>
        </SelectContent>
      </Select>
    </div>
    <div className="space-y-2">
      <Label htmlFor="malware-severity">
        Mức độ nguy hiểm
      </Label>
      <Select>
        <SelectTrigger>
          <SelectValue placeholder="Chọn mức độ" />
        </SelectTrigger>
        <SelectContent>
          <SelectItem value="critical">Nghiêm trọng</SelectItem>
          <SelectItem value="high">Cao</SelectItem>
          <SelectItem value="medium">Trung bình</SelectItem>
          <SelectItem value="low">Thấp</SelectItem>
        </SelectContent>
      </Select>
    </div>
    <div className="space-y-2">
      <Label htmlFor="detection-source">
        Nguồn phát hiện
      </Label>
      <Input id="detection-source" placeholder="Ví dụ: Virus Total" />
    </div>
    <div className="space-y-2">
      <Label htmlFor="malware-description">
        Mô tả
      </Label>
      <Textarea id="malware-description" placeholder="Nhập mô tả" rows={3} />
    </div>
  </div>
);

export function MalwareHashes() {
  return (
    <DataTable
      title="Quản lý mã hash mã độc"
      description="Quản lý và theo dõi các mã hash của các mẫu mã độc đã phát hiện"
      data={mockMalwareHashes}
      columns={columns}
      searchKey="hash"
      onAdd={() => console.log('Add malware hash')}
      onEdit={(record) => console.log('Edit malware hash', record)}
      onDelete={(record) => console.log('Delete malware hash', record)}
      onView={(record) => console.log('View malware hash', record)}
      renderForm={renderForm}
    />
  );
}